-- üåå DATDZ HUB üíß | Final Premium (C√≥ ESP n·ªôi b·ªô)
-- Paste v√†o executor v√† ch·∫°y. (ƒê√£ t√≠ch h·ª£p: intro ping, watermark g√≥c ph·∫£i tr√™n, click sound, blur/rung khi m·ªü, 2 tab, l∆∞u/m·ªü/xo√° script, ESP)

repeat task.wait() until game:IsLoaded()

-- services
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")

-- ---------------------------
-- Intro "Dat Dz" + √¢m ping (fade-in)
-- ---------------------------
do
	local IntroGui = Instance.new("ScreenGui")
	IntroGui.IgnoreGuiInset = true
	IntroGui.ResetOnSpawn = false
	IntroGui.Parent = CoreGui

	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = IntroGui
	TextLabel.Size = UDim2.new(1,0,1,0)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Text = "Dat Dz üíß RPG Script Hub" -- üëà ƒë·ªïi ch·ªØ intro n·∫øu mu·ªën
	TextLabel.TextColor3 = Color3.fromRGB(0,255,255)
	TextLabel.TextScaled = true
	TextLabel.Font = Enum.Font.FredokaOne
	TextLabel.TextTransparency = 1

	-- glow
	local glow = Instance.new("UIStroke")
	glow.Parent = TextLabel
	glow.Thickness = 2
	glow.Color = Color3.fromRGB(0,255,255)

	-- sound ping (nh·∫π)
	local Sound = Instance.new("Sound")
	Sound.SoundId = "rbxassetid://9120780434" -- üëà ƒë·ªïi ID √¢m thanh ping n·∫øu mu·ªën
	Sound.Volume = 1
	Sound.Parent = IntroGui
	Sound:Play()

	local fadeIn = TweenService:Create(TextLabel, TweenInfo.new(1.0, Enum.EasingStyle.Sine), {TextTransparency = 0})
	local fadeOut = TweenService:Create(TextLabel, TweenInfo.new(1.0, Enum.EasingStyle.Sine), {TextTransparency = 1})
	fadeIn:Play()
	task.wait(2.2)
	fadeOut:Play()
	task.wait(1.0)
	IntroGui:Destroy()
end

-- ---------------------------
-- Watermark g√≥c ph·∫£i tr√™n (Dat Dz + ph·ª•: RPG Script Hub) + subtle glow + nh·∫•p nh√°y
-- ---------------------------
do
	local wmGui = Instance.new("ScreenGui")
	wmGui.Name = "DatDzWatermark"
	wmGui.Parent = CoreGui
	wmGui.ResetOnSpawn = false
	wmGui.IgnoreGuiInset = true

	local frame = Instance.new("Frame")
	frame.Parent = wmGui
	frame.AnchorPoint = Vector2.new(1,0) -- g√≥c ph·∫£i tr√™n
	frame.Position = UDim2.new(1, -10, 0, 10) -- c√°ch 10px t·ª´ g√≥c ph·∫£i tr√™n
	frame.Size = UDim2.new(0, 180, 0, 36)
	frame.BackgroundTransparency = 1

	local txt = Instance.new("TextLabel")
	txt.Parent = frame
	txt.Size = UDim2.new(1,0,1,0)
	txt.BackgroundTransparency = 1
	txt.Text = "Dat Dz üíß\nRPG Script Hub" -- üëà ƒë·ªïi n·∫øu mu·ªën
	txt.TextColor3 = Color3.fromRGB(0, 255, 255)
	txt.TextScaled = false
	txt.TextSize = 14
	txt.Font = Enum.Font.FredokaOne
	txt.TextStrokeTransparency = 0.8
	txt.TextTransparency = 0.4
	txt.TextXAlignment = Enum.TextXAlignment.Right
	txt.TextYAlignment = Enum.TextYAlignment.Top
	txt.RichText = false

	-- aura glow (UIStroke)
	local stroke = Instance.new("UIStroke")
	stroke.Parent = txt
	stroke.Color = Color3.fromRGB(120, 255, 255)
	stroke.Thickness = 1
	stroke.Transparency = 0.6

	-- nh·∫•p nh√°y nh·∫π (tween)
	spawn(function()
		while txt and txt.Parent do
			local t1 = TweenService:Create(txt, TweenInfo.new(1.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextTransparency = 0.25})
			local t2 = TweenService:Create(txt, TweenInfo.new(1.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextTransparency = 0.6})
			t1:Play() t1.Completed:Wait()
			t2:Play() t2.Completed:Wait()
		end
	end)
end

-- ---------------------------
-- N√∫t m·ªü menu (n·∫±m n·ªïi, draggable)
-- ---------------------------
local MenuButtonGui = Instance.new("ScreenGui")
MenuButtonGui.Parent = CoreGui
MenuButtonGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local ImageButton = Instance.new("ImageButton")
ImageButton.Parent = MenuButtonGui
ImageButton.BackgroundColor3 = Color3.fromRGB(0,0,0)
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.08,0,0.18,0)
ImageButton.Size = UDim2.new(0,45,0,45)
ImageButton.Draggable = true
ImageButton.Image = "http://www.roblox.com/asset/?id=103173399598412" -- üëà ƒë·ªïi ·∫£nh n√∫t m·ªü menu t·∫°i ƒë√¢y
local UICorner = Instance.new("UICorner", ImageButton)
UICorner.CornerRadius = UDim.new(1,10)

-- click sound (open/close)
local ClickSound = Instance.new("Sound")
ClickSound.SoundId = "rbxassetid://9118822952" -- üëà ƒë·ªïi n·∫øu mu·ªën
ClickSound.Volume = 1
ClickSound.Parent = MenuButtonGui

-- ---------------------------
-- Load Fluent UI
-- ---------------------------
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
repeat task.wait() until game:IsLoaded()

local Window = Fluent:CreateWindow({
	Title = "DatDz HUB üíß",
	SubTitle = "RPG & Script Hub",
	TabWidth = 160,
	Size = UDim2.fromOffset(520, 340),
	Acrylic = true,
	Theme = "Aqua", -- üëà Theme: Aqua (font/m√†u)
	MinimizeKey = Enum.KeyCode.End
})

-- Tabs ngang tr√™n c√πng
local Tabs = {
	Executor = Window:AddTab({ Title = "Nh·∫≠p Script üß©" }),
	Scripts = Window:AddTab({ Title = "Script Ph·ªï Bi·∫øn ‚öôÔ∏è" })
}

-- ---------------------------
-- Executor Tab (Nh·∫≠p script, l∆∞u, m·ªü, xo√°)
-- ---------------------------
local savedScript = nil
local TextBox = Tabs.Executor:AddTextbox("üí¨ D√°n Script T·∫°i ƒê√¢y", "Nh·∫≠p loadstring ho·∫∑c code script...", function() end)

Tabs.Executor:AddButton({
	Title = "‚ñ∂Ô∏è Ch·∫°y Script",
	Description = "Th·ª±c thi code b·∫°n v·ª´a nh·∫≠p",
	Callback = function()
		local text = TextBox.Value
		if text and text ~= "" then
			local success, err = pcall(function() loadstring(text)() end)
			if success then
				savedScript = text
				StarterGui:SetCore("SendNotification", {Title="‚úÖ Th√†nh c√¥ng!", Text="Script ƒë√£ ch·∫°y.", Duration=3})
			else
				StarterGui:SetCore("SendNotification", {Title="‚ùå L·ªói Script", Text=tostring(err), Duration=5})
			end
		else
			StarterGui:SetCore("SendNotification", {Title="‚ö†Ô∏è √î tr·ªëng!", Text="Nh·∫≠p script tr∆∞·ªõc khi ch·∫°y.", Duration=3})
		end
	end
})

Tabs.Executor:AddButton({
	Title = "üíæ L∆∞u Script G·∫ßn ƒê√¢y",
	Description = "L∆∞u l·∫°i script b·∫°n v·ª´a ch·∫°y",
	Callback = function()
		if savedScript then
			if writefile then
				writefile("DatDz_LastScript.txt", savedScript)
				StarterGui:SetCore("SendNotification", {Title="üíæ ƒê√£ l∆∞u!", Text="Script ƒë∆∞·ª£c l∆∞u.", Duration=3})
			else
				StarterGui:SetCore("SendNotification", {Title="‚ö†Ô∏è Kh√¥ng h·ªó tr·ª£", Text="Executor kh√¥ng h·ªó tr·ª£ writefile().", Duration=4})
			end
		else
			StarterGui:SetCore("SendNotification", {Title="‚ö†Ô∏è Kh√¥ng c√≥ script!", Text="Ch·∫°y script tr∆∞·ªõc khi l∆∞u.", Duration=3})
		end
	end
})

Tabs.Executor:AddButton({
	Title = "üìÇ M·ªü Script G·∫ßn ƒê√¢y",
	Description = "T·∫£i script ƒë√£ l∆∞u l·∫ßn tr∆∞·ªõc",
	Callback = function()
		if isfile and isfile("DatDz_LastScript.txt") then
			local content = readfile("DatDz_LastScript.txt")
			TextBox:SetValue(content)
			StarterGui:SetCore("SendNotification", {Title="üìÇ ƒê√£ t·∫£i!", Text="Script g·∫ßn ƒë√¢y ƒë√£ n·∫°p.", Duration=3})
		else
			StarterGui:SetCore("SendNotification", {Title="‚ö†Ô∏è Ch∆∞a c√≥ file!", Text="Ch∆∞a c√≥ script ƒë√£ l∆∞u.", Duration=3})
		end
	end
})

Tabs.Executor:AddButton({
	Title = "üóëÔ∏è Xo√° Script ƒê√£ L∆∞u",
	Description = "Xo√° file script c≈©",
	Callback = function()
		if isfile and isfile("DatDz_LastScript.txt") then
			if delfile then
				delfile("DatDz_LastScript.txt")
				StarterGui:SetCore("SendNotification", {Title="üóëÔ∏è ƒê√£ xo√°!", Text="File ƒë√£ b·ªã xo√°.", Duration=3})
			else
				StarterGui:SetCore("SendNotification", {Title="‚ö†Ô∏è Kh√¥ng h·ªó tr·ª£", Text="Executor kh√¥ng h·ªó tr·ª£ delfile().", Duration=4})
			end
		else
			StarterGui:SetCore("SendNotification", {Title="‚ö†Ô∏è Kh√¥ng c√≥ file!", Text="Kh√¥ng t√¨m th·∫•y file ƒë·ªÉ xo√°.", Duration=3})
		end
	end
})

-- ---------------------------
-- Scripts Tab (script ph·ªï bi·∫øn + ESP n·ªôi b·ªô)
-- ---------------------------
-- Fly V3
Tabs.Scripts:AddButton({
	Title = "Fly V3 ‚úàÔ∏è",
	Description = "Bay m∆∞·ª£t (load t·ª´ external).",
	Callback = function()
		pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
		end)
	end
})

-- Infinite Yield (Admin)
Tabs.Scripts:AddButton({
	Title = "Infinite Yield (Admin)",
	Description = "Menu l·ªánh admin m·∫°nh m·∫Ω.",
	Callback = function()
		pcall(function()
			loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Infinite-Yield-43437"))()
		end)
	end
})

-- Invisible
Tabs.Scripts:AddButton({
	Title = "Invisible (T√†ng h√¨nh)",
	Description = "·∫®n h√¨nh.",
	Callback = function()
		pcall(function()
			loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Awesome-Invisible-man-21074"))()
		end)
	end
})

-- Anti Slap
Tabs.Scripts:AddButton({
	Title = "Anti Slap üí™",
	Description = "Mi·ªÖn nhi·ªÖm slap tower.",
	Callback = function()
		pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/amdzy088/Immune-slap-tower-/main/Immune%20slap%20tower%20work"))()
		end)
	end
})

-- =========================
-- ESP n·ªôi b·ªô (kh√¥ng c·∫ßn external)
-- Toggle ESP button + keybind optional
-- =========================
local ESP = {}
ESP.Enabled = false
ESP.HighlightDistance = true

-- helper: create billboard for a character
local function createESPForCharacter(char, player)
	if not char or not char.Parent then return end
	local head = char:FindFirstChild("Head") or char:FindFirstChildWhichIsA("BasePart")
	if not head then return end

	local billboard = Instance.new("BillboardGui")
	billboard.Name = "DatDz_ESP"
	billboard.Adornee = head
	billboard.ExtentsOffset = Vector3.new(0, 1.6, 0)
	billboard.Size = UDim2.new(0, 120, 0, 40)
	billboard.AlwaysOnTop = true
	billboard.Parent = head

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 0.35
	frame.BorderSizePixel = 0
	frame.BackgroundColor3 = Color3.fromRGB(0,0,0)
	frame.Parent = billboard

	local nameLabel = Instance.new("TextLabel")
	nameLabel.Parent = frame
	nameLabel.Size = UDim2.new(1,0,0.5,0)
	nameLabel.BackgroundTransparency = 1
	nameLabel.Text = player.Name
	nameLabel.Font = Enum.Font.GothamBold
	nameLabel.TextSize = 14
	nameLabel.TextColor3 = Color3.fromRGB(0,255,255)
	nameLabel.TextStrokeTransparency = 0.7
	nameLabel.TextScaled = false
	nameLabel.RichText = false
	nameLabel.Position = UDim2.new(0,0,0,0)
	nameLabel.TextYAlignment = Enum.TextYAlignment.Center

	local distLabel = Instance.new("TextLabel")
	distLabel.Parent = frame
	distLabel.Size = UDim2.new(1,0,0.5,0)
	distLabel.Position = UDim2.new(0,0,0.5,0)
	distLabel.BackgroundTransparency = 1
	distLabel.Text = ""
	distLabel.Font = Enum.Font.Gotham
	distLabel.TextSize = 12
	distLabel.TextColor3 = Color3.fromRGB(200,255,255)
	distLabel.TextStrokeTransparency = 0.8
	distLabel.TextScaled = false
	distLabel.TextYAlignment = Enum.TextYAlignment.Center

	-- store reference
	ESP[player] = {
		billboard = billboard,
		nameLabel = nameLabel,
		distLabel = distLabel,
		char = char
	}
end

-- clean up esp for player
local function removeESPForPlayer(player)
	local data = ESP[player]
	if data and data.billboard and data.billboard.Parent then
		data.billboard:Destroy()
	end
	ESP[player] = nil
end

-- update distances each frame
local function updateESP()
	local localChar = Players.LocalPlayer.Character
	if not localChar then return end
	local hrp = localChar:FindFirstChild("HumanoidRootPart") or localChar:FindFirstChildWhichIsA("BasePart")
	if not hrp then return end
	for pl, data in pairs(ESP) do
		if data and data.distLabel and data.char and data.char.Parent then
			local part = data.char:FindFirstChild("HumanoidRootPart") or data.char:FindFirstChildWhichIsA("BasePart")
			if part then
				local dist = (hrp.Position - part.Position).Magnitude
				local txt = string.format("%.1f m", dist)
				data.distLabel.Text = txt
				-- change color slightly by distance
				if dist < 20 then
					data.nameLabel.TextColor3 = Color3.fromRGB(0,255,120)
				elseif dist < 60 then
					data.nameLabel.TextColor3 = Color3.fromRGB(0,255,200)
				else
					data.nameLabel.TextColor3 = Color3.fromRGB(0,200,255)
				end
			end
		end
	end
end

-- toggle function
local function enableESP(enable)
	ESP.Enabled = enable
	if enable then
		-- create for all current players
		for _, pl in pairs(Players:GetPlayers()) do
			if pl ~= Players.LocalPlayer and pl.Character and pl.Character.Parent then
				createESPForCharacter(pl.Character, pl)
			end
		end
	else
		-- remove all
		for pl, _ in pairs(ESP) do
			removeESPForPlayer(pl)
		end
	end
end

-- listen for new characters
Players.PlayerAdded:Connect(function(pl)
	pl.CharacterAdded:Connect(function(char)
		if ESP.Enabled and pl ~= Players.LocalPlayer then
			-- slight wait to ensure head exists
			task.wait(0.2)
			createESPForCharacter(char, pl)
		end
	end)
end)

Players.PlayerRemoving:Connect(function(pl)
	removeESPForPlayer(pl)
end)

-- also hook existing players' CharacterAdded to recreate
for _, pl in pairs(Players:GetPlayers()) do
	if pl.Character then
		-- do nothing here; creation occurs when enabling
	end
	pl.CharacterAdded:Connect(function(char)
		if ESP.Enabled and pl ~= Players.LocalPlayer then
			task.wait(0.2)
			createESPForCharacter(char, pl)
		end
	end)
end

-- runservice update
local espConn
espConn = RunService.RenderStepped:Connect(function()
	if ESP.Enabled then updateESP() end
end)

-- Add button to toggle ESP
local espButton = Tabs.Scripts:AddToggle({
	Title = "ESP (T√™n + Kho·∫£ng c√°ch)",
	Description = "B·∫≠t/t·∫Øt ESP n·ªôi b·ªô (kh√¥ng c·∫ßn internet).",
	Enabled = false,
	Callback = function(val)
		enableESP(val)
	end
})

-- optional: hotkey to toggle ESP (press P)
pcall(function()
	local UserInputService = game:GetService("UserInputService")
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.P then
			enableESP(not ESP.Enabled)
			-- update toggle ui if available
			pcall(function() espButton:Set(not ESP.Enabled) end)
		end
	end)
end)

-- ---------------------------
-- Animation Open/Close menu + shake + blur + click sound
-- ---------------------------
local menuVisible = true

local function shakeGui(gui)
	task.spawn(function()
		if not gui then return end
		local original = gui.Position
		for i = 1, 6 do
			gui.Position = original + UDim2.new(0, math.random(-6,6), 0, math.random(-6,6))
			task.wait(0.02)
		end
		gui.Position = original
	end)
end

local function toggleMenu()
	local gui = CoreGui:FindFirstChild("Fluent")
	if not gui then return end
	menuVisible = not menuVisible
	ClickSound:Play()
	-- create transient blur/light image
	local blur = Instance.new("ImageLabel")
	blur.Parent = gui
	blur.BackgroundTransparency = 1
	blur.Image = "rbxassetid://11222373871"
	blur.ImageTransparency = 1
	blur.Size = UDim2.new(1,0,1,0)
	blur.ZIndex = -1

	if menuVisible then
		gui.Enabled = true
		local t1 = TweenService:Create(blur, TweenInfo.new(0.36, Enum.EasingStyle.Sine), {ImageTransparency = 0.75})
		t1:Play()
		shakeGui(gui)
	else
		local t2 = TweenService:Create(blur, TweenInfo.new(0.36, Enum.EasingStyle.Sine), {ImageTransparency = 1})
		t2:Play()
		task.wait(0.36)
		gui.Enabled = false
	end

	task.wait(0.9)
	if blur and blur.Parent then blur:Destroy() end
end

ImageButton.MouseButton1Click:Connect(toggleMenu)

-- ensure Fluent gui initially visible
do
	local f = CoreGui:FindFirstChild("Fluent")
	if f then f.Enabled = true end
end

-- End of DatDz HUB Final Premium