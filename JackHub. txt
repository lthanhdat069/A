-- JackUiPremium Dark v3 (Editable Script Version)
-- Delta compatible. Click avatar to open. Tabs include a "Scripts" tab with TextBoxes + Run buttons.
-- SECURITY: This UI does NOT include any external HttpGet/loadstring code by default.
-- If you paste code into the Script boxes and press Run, the code WILL execute client-side.
-- Only paste code you trust.

repeat task.wait() until game:IsLoaded()
task.wait(0.4)

-- CONFIG
local Config = {
    GuiName = "JackUiPremium_v3",
    AvatarImageId = "103173399598412",
    WindowWidth = 700,
    WindowHeight = 420,
    TextCyan = Color3.fromRGB(155,210,255),
    AnimationTime = 0.32
}

-- SERVICES
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- CLEANUP old GUI
if game.CoreGui:FindFirstChild(Config.GuiName) then
    pcall(function() game.CoreGui[Config.GuiName]:Destroy() end)
end

-- ROOT GUI (use CoreGui for Delta compatibility)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = Config.GuiName
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local function mk(parent, class, props)
    local o = Instance.new(class)
    if props then
        for k,v in pairs(props) do
            if type(k) == "string" then pcall(function() o[k] = v end) end
        end
    end
    o.Parent = parent
    return o
end

-- BACKDROP (dark fade)
local Backdrop = mk(ScreenGui, "Frame", {
    Name = "Backdrop",
    Size = UDim2.new(1,0,1,0),
    Position = UDim2.new(0,0,0,0),
    BackgroundColor3 = Color3.new(0,0,0),
    BackgroundTransparency = 1,
    ZIndex = 1,
    Visible = false
})

-- WINDOW container (start offscreen)
local Window = mk(ScreenGui, "Frame", {
    Name = "Window",
    AnchorPoint = Vector2.new(0.5,0.5),
    Size = UDim2.new(0, Config.WindowWidth, 0, Config.WindowHeight),
    Position = UDim2.new(1.3, 0, 0.5, 0),
    BackgroundColor3 = Color3.fromRGB(18,22,28),
    ZIndex = 50,
    ClipsDescendants = true
})
mk(Window, "UICorner", {CornerRadius = UDim.new(0,18)})
mk(Window, "UIStroke", {Color = Config.TextCyan, Thickness = 1.1, Transparency = 0.65})

-- INNER frame
local Inner = mk(Window, "Frame", {BackgroundTransparency = 1, Size = UDim2.new(1,0,1,0)})

-- TITLE BAR
local TitleBar = mk(Inner, "Frame", {Size = UDim2.new(1,0,0,62), BackgroundTransparency = 1, Position = UDim2.new(0,0,0,0)})
local Title = mk(TitleBar, "TextLabel", {
    Text = "JackUiPremium ðŸ’Ž",
    Font = Enum.Font.GothamBold,
    TextSize = 20,
    TextColor3 = Config.TextCyan,
    BackgroundTransparency = 1,
    Position = UDim2.new(0.03,0,0.08,0),
    Size = UDim2.new(0.6,0,0.9,0),
    TextXAlignment = Enum.TextXAlignment.Left
})
local SubTitle = mk(TitleBar, "TextLabel", {
    Text = "Dark editable script UI",
    Font = Enum.Font.Gotham,
    TextSize = 12,
    TextColor3 = Color3.fromRGB(130,180,200),
    BackgroundTransparency = 1,
    Position = UDim2.new(0.03,0,0.52,0),
    Size = UDim2.new(0.6,0,0.4,0),
    TextXAlignment = Enum.TextXAlignment.Left
})
local CloseBtn = mk(TitleBar, "TextButton", {
    Text = "âœ•", Font = Enum.Font.GothamBold, TextSize = 18, TextColor3 = Config.TextCyan,
    BackgroundColor3 = Color3.fromRGB(36,42,52), Size = UDim2.new(0,40,0,40), Position = UDim2.new(0.93,0,0.08,0),
    AutoButtonColor = true
})
mk(CloseBtn, "UICorner", {CornerRadius = UDim.new(0,8)})

-- TABS (horizontal)
local TabsBar = mk(Inner, "Frame", {Position = UDim2.new(0, 12, 0, 64), Size = UDim2.new(1, -24, 0, 48), BackgroundTransparency = 0})
mk(TabsBar, "UICorner", {CornerRadius = UDim.new(0,12)})
local TabsLayout = mk(TabsBar, "UIListLayout", {FillDirection = Enum.FillDirection.Horizontal, Padding = UDim.new(0,10), HorizontalAlignment = Enum.HorizontalAlignment.Left})

-- CONTENT area
local Content = mk(Inner, "Frame", {Position = UDim2.new(0,12,0,120), Size = UDim2.new(1,-24,1,-132), BackgroundTransparency = 1})
mk(Content, "UIListLayout", {Padding = UDim.new(0,8), FillDirection = Enum.FillDirection.Vertical})

-- Create tabs and panels
local tabNames = {"Main","Troll","Fun","Game","Admin","Scripts"}
local tabs = {}
local panels = {}

for i, name in ipairs(tabNames) do
    local tbtn = mk(TabsBar, "TextButton", {
        Text = name, Font = Enum.Font.Gotham, TextSize = 14,
        Size = UDim2.new(0,110,1,-8), BackgroundColor3 = Color3.fromRGB(30,36,44),
        AutoButtonColor = true, TextColor3 = Config.TextCyan
    })
    mk(tbtn, "UICorner", {CornerRadius = UDim.new(0,8)})
    tabs[name] = tbtn

    local panel = mk(Content, "Frame", {Name = "Panel_"..name, BackgroundTransparency = 1, Size = UDim2.new(1,0,0,0), Visible = false})
    mk(panel, "UIListLayout", {Padding = UDim.new(0,8), FillDirection = Enum.FillDirection.Vertical, VerticalAlignment = Enum.VerticalAlignment.Top})
    panels[name] = panel
end

-- Utility: create functional button in panels
local function createFuncButton(parent, title, desc, cb)
    local btn = mk(parent, "TextButton", {Size = UDim2.new(1,0,0,46), BackgroundColor3 = Color3.fromRGB(36,44,56), AutoButtonColor = true, Text = ""})
    mk(btn, "UICorner", {CornerRadius = UDim.new(0,10)})
    mk(btn, "TextLabel", {Text = title, Font = Enum.Font.GothamBold, TextSize = 16, TextColor3 = Config.TextCyan, BackgroundTransparency = 1, Position = UDim2.new(0.03,0,0,0), Size = UDim2.new(0.6,0,1,0), TextXAlignment = Enum.TextXAlignment.Left})
    mk(btn, "TextLabel", {Text = desc, Font = Enum.Font.Gotham, TextSize = 12, TextColor3 = Color3.fromRGB(150,170,190), BackgroundTransparency = 1, Position = UDim2.new(0.03,0,0.5,0), Size = UDim2.new(0.95,0,0.5,0), TextXAlignment = Enum.TextXAlignment.Left})
    btn.MouseButton1Click:Connect(function()
        tween = TweenService:Create(btn, TweenInfo.new(0.08), {BackgroundColor3 = Color3.fromRGB(56,64,76)}); tween:Play()
        task.delay(0.12, function() TweenService:Create(btn, TweenInfo.new(0.12), {BackgroundColor3 = Color3.fromRGB(36,44,56)}):Play() end)
        if cb then
            local ok, err = pcall(cb)
            if not ok then warn("[JackUiPremium] Button callback error:", err) end
        end
    end)
    return btn
end

-- Populate Main tab
do
    local p = panels["Main"]
    createFuncButton(p, "Copy TikTok", "Sao chÃ©p link TikTok", function() pcall(setclipboard, "https://www.tiktok.com/@your_tiktok_here") end)
    createFuncButton(p, "Copy Discord", "Sao chÃ©p invite Discord", function() pcall(setclipboard, "https://discord.gg/your_invite_here") end)
    createFuncButton(p, "Server Hop (placeholder)", "DÃ¡n script server hop vÃ o Scripts tab Ä‘á»ƒ cháº¡y", function() warn("Server Hop placeholder") end)
end

-- Populate Troll tab
do
    local p = panels["Troll"]
    createFuncButton(p, "Fake Lag (local)", "Hiá»‡u á»©ng giáº£ lag local", function() for i=1,5 do task.wait() end; warn("Fake lag done") end)
    createFuncButton(p, "Float Local (2s)", "Neo HRP (local demo)", function()
        local plr = game.Players.LocalPlayer
        if plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = plr.Character.HumanoidRootPart
            local old = hrp.Anchored
            hrp.Anchored = true
            task.delay(2, function() hrp.Anchored = old end)
        end
    end)
end

-- Populate Fun tab
do
    local p = panels["Fun"]
    createFuncButton(p, "Fly (placeholder)", "DÃ¡n mÃ£ Fly vÃ o Scripts tab -> Fly", function() warn("Fly placeholder - use Scripts tab") end)
    createFuncButton(p, "Invisible (placeholder)", "DÃ¡n mÃ£ Invisible vÃ o Scripts tab -> Invisible", function() warn("Invisible placeholder - use Scripts tab") end)
    createFuncButton(p, "WalkOnAir (placeholder)", "DÃ¡n mÃ£ WalkOnAir vÃ o Scripts tab -> WalkOnAir", function() warn("WalkOnAir placeholder - use Scripts tab") end)
end

-- Populate Game tab
do
    local p = panels["Game"]
    createFuncButton(p, "Blox Fruits (placeholder)", "DÃ¡n script vÃ o Scripts tab", function() warn("Blox Fruits placeholder") end)
    createFuncButton(p, "Da Hood (placeholder)", "DÃ¡n script vÃ o Scripts tab", function() warn("Da Hood placeholder") end)
end

-- Populate Admin tab
do
    local p = panels["Admin"]
    createFuncButton(p, "Infinite Yield (placeholder)", "DÃ¡n mÃ£ InfiniteYield vÃ o Scripts tab -> InfiniteYield", function() warn("InfiniteYield placeholder - use Scripts tab") end)
    createFuncButton(p, "FE Admin (placeholder)", "DÃ¡n mÃ£ FE Admin vÃ o Scripts tab -> FEAdmin", function() warn("FE Admin placeholder - use Scripts tab") end)
end

-- ========== SCRIPTS TAB ==========
local scriptsPanel = panels["Scripts"]

-- helper to create labeled TextBox + Run button
local function createScriptBox(parent, labelText, placeholder)
    local container = mk(parent, "Frame", {Size = UDim2.new(1,0,0,140), BackgroundTransparency = 1})
    mk(container, "UIListLayout", {Padding = UDim.new(0,6)})
    local label = mk(container, "TextLabel", {Text = labelText, Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = Config.TextCyan, BackgroundTransparency = 1, Size = UDim2.new(1,0,0,18)})
    local box = mk(container, "TextBox", {
        Text = placeholder or "",
        Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = Color3.fromRGB(230,230,240),
        BackgroundColor3 = Color3.fromRGB(28,32,38), Size = UDim2.new(1,0,0,88), ClearTextOnFocus = false, MultiLine = true, TextWrapped = true
    })
    mk(box, "UICorner", {CornerRadius = UDim.new(0,8)})
    local btnRow = mk(container, "Frame", {Size = UDim2.new(1,0,0,30), BackgroundTransparency = 1})
    local runBtn = mk(btnRow, "TextButton", {Text = "Run", Size = UDim2.new(0,100,1,0), Position = UDim2.new(0,0,0,0), BackgroundColor3 = Color3.fromRGB(36,44,56), AutoButtonColor = true})
    mk(runBtn, "UICorner", {CornerRadius = UDim.new(0,8)})
    local saveBtn = mk(btnRow, "TextButton", {Text = "Save", Size = UDim2.new(0,100,1,0), Position = UDim2.new(0,110,0,0), BackgroundColor3 = Color3.fromRGB(36,44,56), AutoButtonColor = true})
    mk(saveBtn, "UICorner", {CornerRadius = UDim.new(0,8)})
    local status = mk(btnRow, "TextLabel", {Text = "", BackgroundTransparency = 1, Position = UDim2.new(0.65,0,0,0), Size = UDim2.new(0.35,0,1,0), TextColor3 = Color3.fromRGB(180,180,200), Font = Enum.Font.Gotham, TextSize = 12})

    return {
        container = container,
        box = box,
        runBtn = runBtn,
        saveBtn = saveBtn,
        status = status
    }
end

-- We'll keep saved code in memory table; not persistent across sessions
local SavedScripts = {
    Fly = "",
    Invisible = "",
    WalkOnAir = "",
    InfiniteYield = ""
}

-- Create boxes
local flyBox = createScriptBox(scriptsPanel, "Fly (paste Lua code here)", "paste fly code here...")
local invisibleBox = createScriptBox(scriptsPanel, "Invisible (paste Lua code here)", "paste invisible code here...")
local walkBox = createScriptBox(scriptsPanel, "WalkOnAir (paste Lua code here)", "paste walkonair code here...")
local infyBox = createScriptBox(scriptsPanel, "InfiniteYield (paste Lua code here)", "paste infinite yield code here...")

-- helper to run code safely (pcall + loadstring)
local function runUserCode(code, statusLabel)
    if not code or code:match("^%s*$") then
        statusLabel.Text = "No code to run."
        return
    end
    -- Warn user in Output
    warn("[JackUiPremium] Running user code - you are responsible for this code.")
    local fn, loadErr = loadstring(code)
    if not fn then
        statusLabel.Text = "Load error: "..tostring(loadErr)
        warn("[JackUiPremium] loadstring error:", loadErr)
        return
    end
    local ok, res = pcall(fn)
    if not ok then
        statusLabel.Text = "Runtime error: "..tostring(res)
        warn("[JackUiPremium] runtime error:", res)
        return
    end
    statusLabel.Text = "Executed successfully."
end

-- Wire run/save actions
flyBox.runBtn.MouseButton1Click:Connect(function()
    flyBox.status.Text = "Running..."
    runUserCode(flyBox.box.Text, flyBox.status)
end)
flyBox.saveBtn.MouseButton1Click:Connect(function()
    SavedScripts.Fly = flyBox.box.Text
    flyBox.status.Text = "Saved in memory."
end)

invisibleBox.runBtn.MouseButton1Click:Connect(function()
    invisibleBox.status.Text = "Running..."
    runUserCode(invisibleBox.box.Text, invisibleBox.status)
end)
invisibleBox.saveBtn.MouseButton1Click:Connect(function()
    SavedScripts.Invisible = invisibleBox.box.Text
    invisibleBox.status.Text = "Saved in memory."
end)

walkBox.runBtn.MouseButton1Click:Connect(function()
    walkBox.status.Text = "Running..."
    runUserCode(walkBox.box.Text, walkBox.status)
end)
walkBox.saveBtn.MouseButton1Click:Connect(function()
    SavedScripts.WalkOnAir = walkBox.box.Text
    walkBox.status.Text = "Saved in memory."
end)

infyBox.runBtn.MouseButton1Click:Connect(function()
    infyBox.status.Text = "Running..."
    runUserCode(infyBox.box.Text, infyBox.status)
end)
infyBox.saveBtn.MouseButton1Click:Connect(function()
    SavedScripts.InfiniteYield = infyBox.box.Text
    infyBox.status.Text = "Saved in memory."
end)

-- Add small helpers: load saved into boxes if any
flyBox.box.Text = SavedScripts.Fly
invisibleBox.box.Text = SavedScripts.Invisible
walkBox.box.Text = SavedScripts.WalkOnAir
infyBox.box.Text = SavedScripts.InfiniteYield

-- Activate first tab
local currentTab = nil
local function showTab(name)
    for k,v in pairs(panels) do v.Visible = (k == name) end
    currentTab = name
end
showTab("Main")

-- Connect tab buttons
for name, btn in pairs(tabs) do
    btn.MouseButton1Click:Connect(function()
        showTab(name)
    end)
end

-- AVATAR OPEN BUTTON (click to open)
local AvatarBtn = mk(ScreenGui, "ImageButton", {
    Name = "AvatarOpen",
    Size = UDim2.new(0,64,0,64),
    Position = UDim2.new(0.035,0,0.12,0),
    BackgroundColor3 = Color3.fromRGB(28,28,32),
    Image = "http://www.roblox.com/asset/?id="..tostring(Config.AvatarImageId),
    AutoButtonColor = true,
    ZIndex = 999
})
mk(AvatarBtn, "UICorner", {CornerRadius = UDim.new(1,0)})
mk(AvatarBtn, "UIStroke", {Color = Config.TextCyan, Thickness = 1.1})

-- Sound feedback (optional)
local clickSound = mk(AvatarBtn, "Sound", {SoundId = "rbxassetid://9118823101", Volume = 0.9})

local opened = false
local function openMenu()
    if opened then return end
    opened = true
    Backdrop.Visible = true
    tween = TweenService:Create(Backdrop, TweenInfo.new(Config.AnimationTime), {BackgroundTransparency = 0.5}); tween:Play()
    Window.Visible = true
    TweenService:Create(Window, TweenInfo.new(0.36, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Position = UDim2.new(0.5,0,0.5,0)}):Play()
end
local function closeMenu()
    if not opened then return end
    opened = false
    TweenService:Create(Backdrop, TweenInfo.new(Config.AnimationTime), {BackgroundTransparency = 1}):Play()
    TweenService:Create(Window, TweenInfo.new(0.28, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(1.3,0,0.5,0)}):Play()
    task.delay(0.32, function() Backdrop.Visible = false; Window.Visible = false end)
end

AvatarBtn.MouseButton1Click:Connect(function()
    pcall(function() clickSound:Play() end)
    if opened then closeMenu() else openMenu() end
end)

-- Close button
CloseBtn.MouseButton1Click:Connect(function() if opened then closeMenu() end end)

-- Backdrop click to close
Backdrop.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 and opened then closeMenu() end end)

-- Keyboard fallback (G)
UserInputService.InputBegan:Connect(function(input, gp) if not gp and input.KeyCode == Enum.KeyCode.G then if opened then closeMenu() else openMenu() end end end)

-- Final prints
print("[JackUiPremium] GUI loaded (v3). Click avatar to open. Use the Scripts tab to paste your own Lua and press Run.")
warn("[JackUiPremium] SECURITY: Running pasted code is your responsibility. Do NOT paste code you don't trust.")